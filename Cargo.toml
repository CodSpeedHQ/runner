[package]
name = "codspeed-runner"
version = "3.6.1"
edition = "2024"
repository = "https://github.com/CodSpeedHQ/runner"
publish = false

[[bin]]
name = "codspeed"
path = "src/main.rs"


[dependencies]
anyhow = "1.0.75"
clap = { version = "4.4.8", features = ["derive", "env", "color"] }
itertools = "0.11.0"
lazy_static = "1.4.0"
log = "0.4.20"
rand = "0.8.5"
regex = "1.10.2"
reqwest = { version = "0.11.22", features = [
    "json",
    "stream",
    "native-tls-vendored",
] }
reqwest-middleware = "0.2.4"
reqwest-retry = "0.3.0"
serde = { version = "1.0.192", features = ["derive"] }
serde_json = { version = "1.0.108", features = ["preserve_order"] }
url = "2.4.1"
sha256 = "1.4.0"
tokio = { version = "1", features = ["macros", "rt"] }
tokio-tar = "0.3.1"
md5 = "0.7.0"
base64 = "0.21.0"
async-compression = { version = "0.4.5", features = ["tokio", "gzip"] }
simplelog = { version = "0.12.1", default-features = false, features = [
    "termcolor",
] }
tempfile = "3.10.0"
git2 = "0.18.3"
nestify = "0.3.3"
gql_client = { git = "https://github.com/CodSpeedHQ/gql-client-rs" }
serde_yaml = "0.9.34"
sysinfo = { version = "0.33.1", features = ["serde"] }
indicatif = "0.17.8"
console = "0.15.8"
async-trait = "0.1.82"
libc = "0.2.171"
bincode = "1.3.3"
object = "0.36.7"
linux-perf-data = "0.11.0"
debugid = "0.8.0"
memmap2 = "0.9.5"
nix = { version = "0.29.0", features = ["fs", "user"] }
futures = "0.3.31"

[target.'cfg(target_os = "linux")'.dependencies]
procfs = "0.17.0"

[dev-dependencies]
temp-env = { version = "0.3.6", features = ["async_closure"] }
insta = { version = "1.29.0", features = ["json", "redactions"] }
test-with = { version = "0.15", default-features = false, features = [] }
rstest = { version = "0.25.0", default-features = false }

[workspace.metadata.release]
sign-tag = true
sign-commit = true
pre-release-hook = ["./scripts/pre-release.sh", "v{{version}}"]

[profile.dist]
inherits = "release"
lto = "thin"
strip = true

# Config for 'dist'
[workspace.metadata.dist]
# Whether to consider the binaries in a package for distribution (defaults true)
dist = true
# The preferred dist version to use in CI (Cargo.toml SemVer syntax)
cargo-dist-version = "0.28.4"
# CI backends to support
ci = "github"
# The installers to generate for each app
installers = ["shell"]
# Target platforms to build apps for (Rust target-triple syntax)
targets = ["aarch64-unknown-linux-musl", "x86_64-unknown-linux-musl"]
# The archive format to use for non-windows builds (defaults .tar.xz)
unix-archive = ".tar.gz"
# Which actions to run on pull requests
pr-run-mode = "upload"
# Post-announce jobs to run in CI
post-announce-jobs = ["./bump-action"]
# Path that installers should place binaries in
install-path = "CARGO_HOME"
# Whether to install an updater program
install-updater = false

[workspace.metadata.dist.github-custom-runners]
aarch64-unknown-linux-musl = "buildjet-2vcpu-ubuntu-2204-arm"
